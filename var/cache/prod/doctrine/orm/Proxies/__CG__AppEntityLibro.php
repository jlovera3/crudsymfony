<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Libro extends \App\Entity\Libro implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'titulo', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'isbn', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'fecha', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'genero', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'bestseller', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'autor', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'brochureFilename'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'titulo', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'isbn', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'fecha', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'genero', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'bestseller', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'autor', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Libro' . "\0" . 'brochureFilename'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Libro $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitulo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitulo', []);

        return parent::getTitulo();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitulo(string $titulo): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitulo', [$titulo]);

        return parent::setTitulo($titulo);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn', []);

        return parent::getIsbn();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbn(?int $isbn): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn', [$isbn]);

        return parent::setIsbn($isbn);
    }

    /**
     * {@inheritDoc}
     */
    public function getFecha(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFecha', []);

        return parent::getFecha();
    }

    /**
     * {@inheritDoc}
     */
    public function setFecha(?\DateTimeInterface $fecha): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFecha', [$fecha]);

        return parent::setFecha($fecha);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenero(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenero', []);

        return parent::getGenero();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenero(string $genero): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenero', [$genero]);

        return parent::setGenero($genero);
    }

    /**
     * {@inheritDoc}
     */
    public function getBestseller(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBestseller', []);

        return parent::getBestseller();
    }

    /**
     * {@inheritDoc}
     */
    public function setBestseller(bool $bestseller): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBestseller', [$bestseller]);

        return parent::setBestseller($bestseller);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutor(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutor', []);

        return parent::getAutor();
    }

    /**
     * {@inheritDoc}
     */
    public function addAutor(\App\Entity\Autor $autor): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAutor', [$autor]);

        return parent::addAutor($autor);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAutor(\App\Entity\Autor $autor): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAutor', [$autor]);

        return parent::removeAutor($autor);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(?string $image): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrochureFilename(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrochureFilename', []);

        return parent::getBrochureFilename();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrochureFilename(?string $brochureFilename): \App\Entity\Libro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrochureFilename', [$brochureFilename]);

        return parent::setBrochureFilename($brochureFilename);
    }

}
